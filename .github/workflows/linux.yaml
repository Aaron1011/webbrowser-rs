name: Linux

on:
  push:
    branches-ignore: [ '**win**', '**android**', '**macos**', '**bsd**', '**haiku**', '**wasm**', '**ios**' ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUST_LOG: webbrowser=TRACE

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '#build-') || contains(github.event.head_commit.message, '#build-linux') }}
    strategy:
      max-parallel: 1
      matrix:
        rust: [stable, beta, nightly]
    continue-on-error: ${{ matrix.rust != 'stable' }}
    steps:
      - uses: actions/checkout@v3
        name: Checkout
      - name: Install specific rust version
        if: ${{ matrix.rust }} != "stable"
        run: rustup install ${{ matrix.rust }}
      - name: Install rustfmt & clippy
        run: rustup component add rustfmt clippy
      - name: Compile
        run: cargo build
      - name: Run Tests
        env:
          BROWSER: firefox --screenshot %s
        run: cargo test --all --locked --verbose
      - name: Run Tests (hardened)
        run: cargo test --features hardened --locked --verbose --test test_unix tests::test_hardened_mode
      - name: Check Code Formatting
        run: cargo fmt --all -- --check
      - name: Lints
        run: cargo clippy --all-targets -- -D warnings
